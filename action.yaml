name: 'Catalina tester'
description: 'Creates tmp DB, run migration files against DB and then drop it'
inputs:
  db-image-name:
    description: 'Database docker image'
    required: true
    default: 'mysql'
  db-image-tag:
    description: 'Database docker image tag'
    required: true
    default: 'latest'
  db-host:
    description: 'Database host'
    required: true
    default: 'some_mysql_db'
  db-user:
    description: 'Database user'
    required: true
    default: 'root'
  db-network:
    description: 'Database network'
    required: false
    default: 'database_network'
  db-password:
    description: 'Database password'
    required: true
    default: '123456'
  db-host-port:
    description: 'Database host port'
    required: true
    default: '3306'
  db-internal-port:
    description: 'Database internal port'
    required: true
    default: '3306'
  db-client:
    description: 'Database client'
    required: true
    default: 'mysql2'
  knex-image-name:
    description: 'Knex docker image'
    required: true
    default: 'knex'
  knex-image-tag:
    description: 'Knex docker image tag'
    required: true
    default: 'latest'
runs:
  using: 'composite'
  steps:
    - name: 'Set Github Path'
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: 'Create Database network'
      shell: 'bash'
      run: |
        docker network create ${{ inputs.db-network }}

    - name: 'Run Database Server'
      run: run_db.sh
      shell: 'bash'
      env:
        DB_IMAGE_NAME: ${{ inputs.db-image-name }}
        DB_IMAGE_TAG: ${{ inputs.db-image-tag }}
        DB_HOST: ${{ inputs.db-host }}
        DB_NETWORK: ${{ inputs.db-network }}
        DB_PASSWORD: ${{ inputs.db-password }}
        DB_HOST_PORT: ${{ inputs.db-host-port }}
        DB_INTERNAL_PORT: ${{ inputs.db-internal-port }}

    - name: 'Build knex'
      run: build_knex.sh
      shell: 'bash'
      env:
        DB_CLIENT: ${{ inputs.db-client }}
        KNEX_IMAGE_NAME: ${{ inputs.knex-image-name }}
        KNEX_IMAGE_TAG: ${{ inputs.knex-image-tag }}

    - name: 'Prepare .env file'
      shell: 'bash'
      run: |
        echo "DB_CLIENT=${{ inputs.db-client }}" >> .env
        echo "DB_HOST=${{ inputs.db-host }}" >> .env
        echo "DB_HOST_PORT=${{ inputs.db-host-port }}" >> .env
        echo "DB_NAME=${{ inputs.db-name }}" >> .env
        echo "DB_PASSWORD=${{ inputs.db-password }}" >> .env
        echo "DB_USER=${{ inputs.db-user }}" >> .env

    - name: 'Run migrations'
      run: run_migrations.sh
      shell: 'bash'
      env:
        DB_NETWORK: ${{ inputs.db-network }}
        KNEX_IMAGE_NAME: ${{ inputs.knex-image-name }}
        KNEX_IMAGE_TAG: ${{ inputs.knex-image-tag }}
        KNEX_CONTAINER_NAME: 'migration-runner'

    - name: 'Clean up'
      run: clean_up.sh
      shell: 'bash'
      env:
        DB_HOST: ${{ inputs.db-host }}